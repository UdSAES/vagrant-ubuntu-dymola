# Install Dymola on Ubuntu 18.04 LTS, starting from scratch at
# https://app.vagrantup.com/hashicorp/boxes/bionic64 using VirtualBox

---
- hosts: all  # 'all' works with Vagrant but not in general
  vars:
    vm_hostname: "ms-vm-ubuntu1804"
    version:
      name: Dymola 2021x  # application name (SHOULD include version string)
      number: 2021.2-1  # version number as used in filename of .rpm-packages
    install_dir: /opt/dymola-2021x-x86_64  # directory in which Dymola is installed

    # List of packages/libraries to be installed as .rpm-file/as .deb-file
    list_of_packages:
      - {
          rpm: "dymola-{{ version.number }}.x86_64.rpm",
          deb: "dymola_{{ version.number }}_amd64.deb"
        }
      - {
          rpm: "dymola-dassaultsystemes-{{ version.number }}.x86_64.rpm",
          deb: "dymola-dassaultsystemes_{{ version.number }}_amd64.deb"
        }
      - {
          rpm: "dymola-electrifiedpowertrains-{{ version.number }}.x86_64.rpm",
          deb: "dymola-electrifiedpowertrains_{{ version.number }}_amd64.deb"
        }

    # Disable GNOME default folders in $HOME (`true`) or let them be (`false`)
    disable_gnome_default_folders: true
  handlers:
    - name: restart network manager
      service:
        name: network-manager
        state: restarted
      become: true
    - name: netplan apply
      command:
        cmd: "netplan apply"
      become: true
  tasks:
    # https://docs.ansible.com/ansible/latest/modules/apt_module.html
    - name: Only run "update_cache=yes" if the last one is more than 3600 seconds ago
      apt:
        update_cache: yes
        cache_valid_time: 3600
      become: true

    # https://wiki.ubuntuusers.de/GNOME_Installation
    - name: Install GNOME core
      apt:
        name: gnome-core
        state: present
      become: true

    # CAREFUL, this broke automatic resizing of the VM screen size until re-installing
    # the VirtualBox Guest Additions (might work on first install, though)
    - name: "Perform update using `apt-get dist-upgrade`"  # https://askubuntu.com/a/81594
      apt:
        upgrade: dist
      become: true

    - name: "Set hostname to {{ vm_hostname }}"
      hostname:
        name: "{{ vm_hostname }}"
      become: true

    #   become: true

    # Get rid of annoying default folders in $HOME created by GNOME
    - name: Disable default folders
      replace:
        dest: "/home/{{ ansible_user }}/.config/user-dirs.dirs"
        regexp: "^(XDG_.*)$"
        replace: '# \1'
      when: disable_gnome_default_folders
    - name: Make disabling of default folders persistent
      lineinfile:
        dest: "/home/{{ ansible_user }}/.config/user-dirs.conf"
        regexp: '^enabled='
        line: "enabled=false"
        create: yes
        state: present
      when: disable_gnome_default_folders
    - name: Remove folders created during installation
      file:
        path: "/home/{{ ansible_user }}/{{ item }}"
        state: absent
      loop:
        - "Desktop"
        - "Documents"
        - "Downloads"
        - "Music"
        - "Pictures"
        - "Public"
        - "Templates"
        - "Videos"
      when: disable_gnome_default_folders

    # https://askubuntu.com/a/1043244
    - name: Enable wired network connection, part 1
      lineinfile:
        dest: "/etc/NetworkManager/NetworkManager.conf"
        regexp: '^managed='
        line: "managed=true"
        state: present
      become: true
      notify: restart network manager

    # https://askubuntu.com/a/1178044
    - name: Enable wired network connection, part 2
      lineinfile:
        dest: "/etc/netplan/01-netcfg.yaml"
        regexp: '^\s\srenderer:'
        line: "  renderer: NetworkManager"
        state: present
      become: true
      notify: netplan apply

    # Install Dymola ###################################################################
    # -- list all dependencies: `ldd /full/path/to/executable`
    # -- identify specific problem: `QT_DEBUG_PLUGINS=1 /full/path/to/executable`
    # -- NOTE: running `dymola` might work even if the above raisies problems!
    # -- find missing packages: https://packages.ubuntu.com/ (limit search to "bionic")
    - name: Install dependencies of Dymola, 1/2
      apt:
        name:
          - alien  # for converting .rpm-packages to .deb-packages
          - zip  # for FMU export (according to Dymola manual)
          - unzip  # for FMU export (according to Dymola manual)
          - g++-multilib  # for 32-bit compilation (according to Dymola manual)
          - libc6-dev-i386  # for 32-bit compilation (according to Dymola manual)

          # "Since Qt 5.15 no longer supports embedding of the XCB libraries,
          # these must now be present on the platform running Dymola. See the
          # table in https://doc.qt.io/qt-5.15/linux-requirements.html for the list
          # of versions of the ones starting with “libxcb”. Note that the
          # development packages (“-dev”) mentioned outside the table are not
          # needed." (Dymola manual, section "Installation on Linux")
          # NOTE: If something is wrong, the error message you will get is typically
          # "Fatal: This application failed to start because no Qt platform plugin could
          # be initialized. Reinstalling the application may fix this problem. Available
          # platform plugins are: xcb. Aborted (core dumped)"
          - xcb
          - libxcb-render0
          - libxcb-render-util0
          - libxcb-shape0
          - libxcb-randr0
          - libxcb-xfixes0
          - libxcb-sync1
          - libxcb-shm0
          - libxcb-icccm4
          - libxcb-keysyms1
          - libxcb-image0
          # The libraries `libxcb-xinput.so.0` [...] might require
          # explicit installation. (Dymola manual, section "Installation on Linux")
          - libxcb-xinput0

          # /opt/dymola-2021x-x86_64/bin64/dymola: error while loading shared libraries:
          # libGLU.so.1: cannot open shared object file: No such file or directory
          - libglu1-mesa

          # /opt/dymola-2021x-x86_64/bin64/dymola: error while loading shared libraries:
          # libsnappy.so.1: cannot open shared object file: No such file or directory
          - libsnappy1v5

          # Additional missing dependencies
          # -- theoretically provided in `{{ install_dir }}/bin/lib64`, but not found
          - libqt5gui5
          - libqt5printsupport5
          - libqt5webengine5
          - libqt5webenginewidgets5
          - libqt5x11extras5
          - libqt5xml5
        state: present
      become: true

    - name: Install dependencies of Dymola, 2/2
      apt:
        deb: "{{ item }}"
        state: present
      become: true
      loop:
        # The libraries [...] `libevent-2.0.so.5` might require
        # explicit installation. (Dymola manual, section "Installation on Linux")
        # -> https://launchpad.net/ubuntu/+source/libevent
        - https://launchpad.net/ubuntu/+archive/primary/+files/libevent-2.0-5_2.0.16-stable-1_amd64.deb
        # /opt/dymola-2021x-x86_64/bin64/dymola: error while loading shared libraries:
        # libicui18n.so.52.1: cannot open shared object file: No such file or directory
        # -> https://launchpad.net/ubuntu/+source/icu
        - https://launchpad.net/ubuntu/+archive/primary/+files/libicu52_52.1-3_amd64.deb

    - name: Link libraries still not found
      ansible.builtin.file:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        state: link
      become: true
      loop:
        # /opt/dymola-2021x-x86_64/bin64/dymola: error while loading shared libraries:
        # libQtitanBase.so.1: cannot open shared object file: No such file or directory
        - {
            src: "{{ install_dir }}/bin/lib64/libQtitanBase.so.1",
            dest: "/usr/lib/libQtitanBase.so.1"
          }
        # /opt/dymola-2021x-x86_64/bin64/dymola: error while loading shared libraries:
        # libQtitanRibbon.so.5: cannot open shared object file: No such file or directory
        - {
            src: "{{ install_dir }}/bin/lib64/libQtitanRibbon.so.5",
            dest: "/usr/lib/libQtitanRibbon.so.5"
          }

    - name: Convert .rpm-packages to .deb-packages
      command:
        chdir: "/vagrant/linux_x86_64/"  # directory containing .rpm-packages
        cmd: "alien --scripts --keep-version ./{{ item.rpm }}"
        creates: "./{{ item.deb }}"
      loop: "{{ list_of_packages|flatten(levels=1) }}"
      become: true

    - name: Install Dymola and libraries
      apt:
        deb: "/vagrant/linux_x86_64/{{ item.deb }}"  # directory containing .deb-packages
        state: present
      loop: "{{ list_of_packages|flatten(levels=1) }}"
      become: true

    # Voilà! It should now be possible to start Dymola 2021 as `dymola` from the terminal
    # Bonus: Make Dymola accessible from the Applications-menu in GNOME
    - name: Install .desktop-file for Dymola
      template:
        src: ./desktopfile.txt.j2
        dest: "/home/{{ ansible_user }}/.local/share/applications/dymola.desktop"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0775'
      vars:
        application_name: "{{ version.name }}"
        install_directory: "{{ install_dir }}"
